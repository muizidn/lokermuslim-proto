// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pekerjaan.proto

package loker

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pekerjaan struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pekerjaan) Reset()         { *m = Pekerjaan{} }
func (m *Pekerjaan) String() string { return proto.CompactTextString(m) }
func (*Pekerjaan) ProtoMessage()    {}
func (*Pekerjaan) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd1855bd39d49e87, []int{0}
}

func (m *Pekerjaan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pekerjaan.Unmarshal(m, b)
}
func (m *Pekerjaan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pekerjaan.Marshal(b, m, deterministic)
}
func (m *Pekerjaan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pekerjaan.Merge(m, src)
}
func (m *Pekerjaan) XXX_Size() int {
	return xxx_messageInfo_Pekerjaan.Size(m)
}
func (m *Pekerjaan) XXX_DiscardUnknown() {
	xxx_messageInfo_Pekerjaan.DiscardUnknown(m)
}

var xxx_messageInfo_Pekerjaan proto.InternalMessageInfo

func (m *Pekerjaan) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Pekerjaan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListPekerjaan struct {
	DaftarPekerjaan      []*Pekerjaan `protobuf:"bytes,1,rep,name=daftarPekerjaan,proto3" json:"daftarPekerjaan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListPekerjaan) Reset()         { *m = ListPekerjaan{} }
func (m *ListPekerjaan) String() string { return proto.CompactTextString(m) }
func (*ListPekerjaan) ProtoMessage()    {}
func (*ListPekerjaan) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd1855bd39d49e87, []int{1}
}

func (m *ListPekerjaan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPekerjaan.Unmarshal(m, b)
}
func (m *ListPekerjaan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPekerjaan.Marshal(b, m, deterministic)
}
func (m *ListPekerjaan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPekerjaan.Merge(m, src)
}
func (m *ListPekerjaan) XXX_Size() int {
	return xxx_messageInfo_ListPekerjaan.Size(m)
}
func (m *ListPekerjaan) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPekerjaan.DiscardUnknown(m)
}

var xxx_messageInfo_ListPekerjaan proto.InternalMessageInfo

func (m *ListPekerjaan) GetDaftarPekerjaan() []*Pekerjaan {
	if m != nil {
		return m.DaftarPekerjaan
	}
	return nil
}

func init() {
	proto.RegisterType((*Pekerjaan)(nil), "loker.Pekerjaan")
	proto.RegisterType((*ListPekerjaan)(nil), "loker.ListPekerjaan")
}

func init() { proto.RegisterFile("pekerjaan.proto", fileDescriptor_fd1855bd39d49e87) }

var fileDescriptor_fd1855bd39d49e87 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x48, 0xcd, 0x4e,
	0x2d, 0xca, 0x4a, 0x4c, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcd, 0xc9, 0xcf,
	0x4e, 0x2d, 0x92, 0x92, 0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x0b, 0x26, 0x95, 0xa6,
	0xe9, 0xa7, 0xe6, 0x16, 0x94, 0x54, 0x42, 0xd4, 0x28, 0xe9, 0x73, 0x71, 0x06, 0xc0, 0xb4, 0x09,
	0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x31, 0x65, 0xa6, 0x08,
	0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9,
	0x4a, 0xde, 0x5c, 0xbc, 0x3e, 0x99, 0xc5, 0x25, 0x08, 0x4d, 0x56, 0x5c, 0xfc, 0x29, 0x89, 0x69,
	0x25, 0x89, 0x45, 0x70, 0x21, 0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x01, 0x3d, 0xb0, 0xfd,
	0x7a, 0x70, 0xf1, 0x20, 0x74, 0x85, 0x46, 0xee, 0x5c, 0x02, 0x70, 0x4e, 0x70, 0x6a, 0x51, 0x59,
	0x66, 0x72, 0xaa, 0x90, 0x31, 0x17, 0xb3, 0x63, 0x4e, 0x8e, 0x90, 0x98, 0x1e, 0xc4, 0xd9, 0x7a,
	0x30, 0x67, 0xeb, 0xb9, 0x82, 0x9c, 0x2d, 0x25, 0x02, 0x35, 0x15, 0xc5, 0x11, 0x49, 0x6c, 0x60,
	0x55, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x1a, 0x7f, 0x49, 0x04, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PekerjaanServiceClient is the client API for PekerjaanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PekerjaanServiceClient interface {
	All(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListPekerjaan, error)
}

type pekerjaanServiceClient struct {
	cc *grpc.ClientConn
}

func NewPekerjaanServiceClient(cc *grpc.ClientConn) PekerjaanServiceClient {
	return &pekerjaanServiceClient{cc}
}

func (c *pekerjaanServiceClient) All(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListPekerjaan, error) {
	out := new(ListPekerjaan)
	err := c.cc.Invoke(ctx, "/loker.PekerjaanService/All", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PekerjaanServiceServer is the server API for PekerjaanService service.
type PekerjaanServiceServer interface {
	All(context.Context, *empty.Empty) (*ListPekerjaan, error)
}

// UnimplementedPekerjaanServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPekerjaanServiceServer struct {
}

func (*UnimplementedPekerjaanServiceServer) All(ctx context.Context, req *empty.Empty) (*ListPekerjaan, error) {
	return nil, status.Errorf(codes.Unimplemented, "method All not implemented")
}

func RegisterPekerjaanServiceServer(s *grpc.Server, srv PekerjaanServiceServer) {
	s.RegisterService(&_PekerjaanService_serviceDesc, srv)
}

func _PekerjaanService_All_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PekerjaanServiceServer).All(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/loker.PekerjaanService/All",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PekerjaanServiceServer).All(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _PekerjaanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "loker.PekerjaanService",
	HandlerType: (*PekerjaanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "All",
			Handler:    _PekerjaanService_All_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pekerjaan.proto",
}
